name: Build and Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: valor-assist-service
  NODE_VERSION: '20.x'
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}

    - name: Run tests
      run: npm test --if-present

    - name: Prepare deployment package
      run: |
        # Copy package.json to the dist directory
        cp package.json dist/
        # If you have a server.js or similar entry file, copy that too
        if [ -f "server.js" ]; then
          cp server.js dist/
        fi
        # If you need other files for production
        if [ -f ".env.production" ]; then
          cp .env.production dist/
        fi
        # Create basic web.config for Azure
        echo '<?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <handlers>
              <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
            </handlers>
            <rewrite>
              <rules>
                <rule name="StaticContent">
                  <action type="Rewrite" url="dist{REQUEST_URI}"/>
                </rule>
                <rule name="DynamicContent">
                  <conditions>
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                  </conditions>
                  <action type="Rewrite" url="server.js"/>
                </rule>
              </rules>
            </rewrite>
          </system.webServer>
        </configuration>' > dist/web.config

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app
        path: ./

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
