name: Build and Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: valor-assist-service
  NODE_VERSION: '20.x'
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

<<<<<<< HEAD
      - name: Prepare deployment package
        run: |
          # Copy index.html to root for Vite
          cp client/index.html ./index.html
          
          # Remove source files but keep built files and dependencies
          rm -rf client/src
          rm -rf server/*.ts
          rm -rf scripts
          rm -rf attached_assets
          rm -f *.log
          rm -f .env
          rm -f github-secrets-setup.md
          rm -f valor-assist-credentials.txt
          
          # Ensure package.json includes Node.js 22 requirement
          echo "Checking package.json..."
          cat package.json | grep -A 5 '"name"'
=======
    - name: Build application
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
>>>>>>> 03a1cae462e1c70a0eeb047a3ac0e6832333c814

    - name: Run tests
      run: npm test --if-present

    - name: Create deployment package
      run: |
        # Create a deployment directory
        mkdir -p deploy

        # Copy build output to deployment directory
        cp -r dist/* deploy/
        
        # Copy key Node.js files to deployment directory root
        cp package.json deploy/
        cp package-lock.json deploy/ || echo "No package-lock.json found"
        
        # Create a simple server.js for static content
        echo 'const express = require("express");
        const path = require("path");
        const app = express();
        
        app.use(express.static("./"));
        
        app.get("*", (req, res) => {
          res.sendFile(path.resolve(__dirname, "index.html"));
        });
        
        const PORT = process.env.PORT || 8080;
        app.listen(PORT, () => {
          console.log(`Server running on port ${PORT}`);
        });' > deploy/server.js
        
        # Add express to dependencies
        cd deploy
        npm pkg set dependencies.express="^4.18.2"
        cd ..

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: deploy/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app
        path: ./

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
